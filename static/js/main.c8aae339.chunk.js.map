{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleValue","role","htmlFor","TextForm","sentence","setSentence","useState","style","color","heading","placeholder","backgroundColor","rows","value","onChange","event","target","handleOnClick","uppercase","toUpperCase","showAlert","copyText","text","document","getElementById","select","navigator","clipboard","writeText","removeSpace","newText","split","join","clearText","length","defaultProps","Alert","alert","class","word","lower","toLowerCase","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","Fragment","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"0LAEe,SAASA,EAAOC,GAC7B,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCJ,EAAMK,KAAI,QAAAD,OAAOJ,EAAMK,OACvEJ,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAC9BN,EAAMO,OAETN,IAAAC,cAAA,UACEC,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXZ,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cb,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,SAI9DL,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,WAAWG,KAAK,KAAI,WAiBrCL,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,SAAOC,UAAU,mBAAmBa,QAAShB,EAAMiB,YAAaT,KAAK,WAAWU,KAAK,SAASJ,GAAG,2BACjGb,IAAAC,cAAA,SAAOC,UAAS,yBAAAC,OAAyC,UAAdJ,EAAMK,KAAgB,OAAO,SAAWc,QAAQ,0BAAyB,UAAuB,UAAfnB,EAAMK,KAAkB,OAAS,QAAQ,cC9CpK,SAASe,EAASpB,GAE/B,MAAOqB,EAAUC,GAAeC,mBAAS,IA+BzC,OACEtB,IAAAC,cAAA,WACID,IAAAC,cAAA,MAAIsB,MAAO,CAACC,MAAqB,UAAfzB,EAAMK,KAAkB,QAAS,UAAWL,EAAM0B,SACtEzB,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,SAAOiB,QAAQ,UAAUhB,UAAU,aAAaqB,MAAO,CAACC,MAAqB,UAAfzB,EAAMK,KAAkB,QAAS,UAAU,iBAGzGJ,IAAAC,cAAA,SACEM,KAAK,QACLL,UAAU,eACVW,GAAG,UACHa,YAAY,mBACZH,MAAO,CAACI,gBAA+B,UAAf5B,EAAMK,KAAkB,QAAS,YAAaoB,MAAqB,UAAfzB,EAAMK,KAAkB,QAAS,YAGjHJ,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,SAAOiB,QAAQ,QAAQhB,UAAU,aAAaqB,MAAO,CAACC,MAAqB,UAAfzB,EAAMK,KAAkB,QAAS,UAAU,cAGvGJ,IAAAC,cAAA,YACEC,UAAU,eACVW,GAAG,QACHe,KAAK,IACLC,MAAOT,EACPM,YAAY,qBACZI,SAtDgBC,IACtBV,EAAYU,EAAMC,OAAOH,QAsDnBN,MAAO,CAACI,gBAA+B,UAAf5B,EAAMK,KAAkB,QAAS,YACjDoB,MAAqB,UAAfzB,EAAMK,KAAkB,QAAS,WAEjDJ,IAAAC,cAAA,OAAKC,UAAU,QACfF,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAvDzBkB,KACpB,IAAIC,EAAYd,EAASe,cACzBd,EAAYa,GACZnC,EAAMqC,UAAU,4BAA6B,aAoDwB,yBACjEpC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAlD/BsB,KACd,IAAIC,EAAOC,SAASC,eAAe,SACnCF,EAAKG,SACLC,UAAUC,UAAUC,UAAUN,EAAKT,OACnC9B,EAAMqC,UAAU,uBAAwB,aA8CwB,aAC5DpC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QA5C3B8B,KAClB,IAAIC,EAAU1B,EAAS2B,MAAM,QAC7B1B,EAAYyB,EAAQE,KAAK,MACzBjD,EAAMqC,UAAU,oCAAqC,aAyCc,iBAC/DpC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBa,QAvC9BkC,KAEf5B,EADU,IAEVtB,EAAMqC,UAAU,sBAAuB,aAoC0B,eAI7DpC,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,MAAIsB,MAAO,CAACC,MAAqB,UAAfzB,EAAMK,KAAkB,QAAS,UAAU,qBAC7DJ,IAAAC,cAAA,KAAGsB,MAAO,CAACC,MAAqB,UAAfzB,EAAMK,KAAkB,QAAS,UAAWgB,EAAS2B,MAAM,KAAKG,OAAO,cAAY9B,EAAS8B,OAAO,kBDb9HpD,EAAOqD,aAAe,CACpB7C,MAAO,sBE/CM8C,MAbf,SAAerD,GAMb,OACEA,EAAMsD,OAAQrD,IAAAC,cAAA,OAAKqD,MAAK,eAAAnD,OAAiBJ,EAAMsD,MAAM9C,MAAQU,KAAK,SAN9CsC,KAChB,MAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGvB,cAAgBqB,EAAMG,MAAM,IAKlDC,CAAW7D,EAAMsD,MAAM9C,MAAM,KAAGR,EAAMsD,MAAMQ,MCqCtCC,MAxCf,WACE,MAAO1D,EAAM2D,GAAWzC,mBAAS,UAC1B+B,EAAOW,GAAW1C,mBAAS,MAE5Bc,EAAYA,CAAC6B,EAAS1D,KAC1ByD,EAAS,CACPH,IAAKI,EACL1D,KAAMA,IAGN2D,WAAW,KACTF,EAAS,OACT,OAgBN,OACEhE,IAAAC,cAAAD,IAAAmE,SAAA,KACEnE,IAAAC,cAACH,EAAM,CAACQ,MAAM,eAAeF,KAAMA,EAAMY,YAf1BA,KACL,UAATZ,GACD2D,EAAQ,QACRxB,SAAS6B,KAAK7C,MAAMI,gBAAkB,OACtCS,EAAU,6BAA6B,aAGvC2B,EAAQ,SACRxB,SAAS6B,KAAK7C,MAAMI,gBAAkB,QACtCS,EAAU,8BAA8B,eAOxCpC,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAACmD,EAAK,CAACC,MAAOA,IACdrD,IAAAC,cAACkB,EAAQ,CAACM,QAAQ,0BAA0BrB,KAAMA,EAAMgC,UAAWA,OC5B5DiC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAW5C,SAASC,eAAe,SACpD4C,OACHpF,IAAAC,cAACD,IAAMqF,WAAU,KACfrF,IAAAC,cAAC6D,EAAG,QAORO","file":"static/js/main.c8aae339.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  About\r\n                </a>\r\n              </li>\r\n            </ul>\r\n\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" onClick={props.toggleValue} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className={`form-check-label text-${props.mode ==='light'?\"dark\":\"light\"}`} htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light'? \"Dark\" : \"Light\"} Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Select Navbar Name\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [sentence, setSentence] = useState(\"\");\r\n\r\n  const handleOnChange = (event)=>{\r\n    setSentence(event.target.value);\r\n  };\r\n\r\n  const handleOnClick = ()=>{\r\n    var uppercase = sentence.toUpperCase();\r\n    setSentence(uppercase);\r\n    props.showAlert(\"Converted to UpperCase...\", \"success\");\r\n  };\r\n\r\n  const copyText= ()=>{\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copy to Clipboard...\", \"success\");\r\n    }\r\n\r\n  const removeSpace = ()=>{\r\n    let newText = sentence.split(/[ ]+/);\r\n    setSentence(newText.join(\" \"));\r\n    props.showAlert(\"Removed extra spaces from text...\", \"success\");\r\n  }\r\n\r\n  const clearText =()=>{\r\n    var text= \"\";\r\n    setSentence(text);\r\n    props.showAlert(\"Text box is cleared\", \"success\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <h1 style={{color:props.mode === 'light'? 'black': 'white'}}>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"myInput\" className=\"form-label\" style={{color:props.mode === 'light'? 'black': 'white'}}>\r\n          Email address\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          id=\"myInput\"\r\n          placeholder=\"name@example.com\"\r\n          style={{backgroundColor:props.mode === 'light'? 'white': 'lightgray', color:props.mode === 'light'? 'black': 'white'}}\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"myBox\" className=\"form-label\" style={{color:props.mode === 'light'? 'black': 'white'}}>\r\n          Enter text\r\n        </label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          rows=\"5\"\r\n          value={sentence}\r\n          placeholder=\"Enter text here...\"\r\n          onChange={handleOnChange}\r\n          style={{backgroundColor:props.mode === 'light'? 'white': 'lightgray',\r\n                  color:props.mode === 'light'? 'black': 'white'}}\r\n        ></textarea>\r\n        <div className=\"my-4\">\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleOnClick}>Convert to upper case</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={copyText}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={removeSpace}>Remove Spaces</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={clearText}>Clear Text</button>\r\n\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <h1 style={{color:props.mode === 'light'? 'black': 'white'}}>Your text summary</h1>\r\n          <p style={{color:props.mode === 'light'? 'black': 'white'}}>{sentence.split(\" \").length} words and {sentence.length} characters</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    \r\n  return (\r\n    props.alert &&<div class={`alert alert-${props.alert.type}`} role=\"alert\">\r\n        {capitalize(props.alert.type)}: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React, { useState } from \"react\";\nimport \"./App.css\";\n//import About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert]= useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n      })\n\n      setTimeout(()=>{\n        setAlert(null);\n      },1500);\n  }\n\n  const toggleValue= ()=>{\n    if(mode === 'light'){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'gray';\n      showAlert(\"Dark mode has been enabled\",\"success\")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\")\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"My React App\" mode={mode} toggleValue={toggleValue}/>\n      <div className=\"container my-3\">\n        <Alert alert={alert}/>\n        <TextForm heading=\"Give your suggestions..\" mode={mode} showAlert={showAlert}/>\n      \n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}